import type { Options } from "ajv";
import { loadConfig as load } from "c12";

/**
 * Configuration for each JSON file.
 * Set to `false` to disable validation for a specific file.
 * @see https://ajv.js.org/options.html
 */
type Config = Record<string, Exclude<Options, "strict" | "loadSchema"> | false>;

// configure ajv options for each json file
// ref: https://ajv.js.org/options.html
const defaultConfig: Config = {
	"biome.jsonc": {
		formats: {
			// cspell:ignore schemars
			// ignore non-standard formats generated by schemars
			// ref: https://github.com/GREsau/schemars/blob/3271fbd96a65c0d15e1cc5d5391810842cae0c28/schemars/src/json_schema_impls/primitives.rs#L89-L96
			uint8: true,
			uint16: true,
			uint64: true,
		},
	},
};

const loadConfig = async (rootDir: string): Promise<Config> => {
	const { config } = await load<Config>({
		cwd: rootDir,
		defaults: defaultConfig,
		name: "jschema",
		rcFile: false,
	});
	return config;
};

export { type Config, loadConfig };
